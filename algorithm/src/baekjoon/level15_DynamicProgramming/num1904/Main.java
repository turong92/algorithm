package baekjoon.level15.num1904;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		int[] tileArr = new int[N+2];
		tileArr[1] = 1;
		tileArr[2] = 2;
		
		
		for(int i=3;i<=N;i++) {
			tileArr[i] = (tileArr[i-1] + tileArr[i-2]) % 15746;
		}
		
		System.out.println(tileArr[N]);
		
		br.close();
	}

}

/*
N = 1 / 1
1
N = 2 / 2
00 11
N = 3 / 3
001 100 111
N = 4 / 5
0000 0011 1001 1100 1111
N = 5 / 8
00001 00100 00111 10000 10011 11001 11100 11111
N = 6 / 13
000000 000011 001001 001100 001111 100001 100100 100111 110000 110011 111001 111100 111111
N = 7 / 21
0000001 0000100 0000111 0010000 0010011 0011001 0011100 0011111 1000000 1000011 1001001 1001100 1001111 1100001 1100100 1100111 1110000 1110011 1111001 1111100 1111111
 

*/

/*
01타일
시간 제한	메모리 제한	제출	정답	맞은 사람	정답 비율
0.75 초 (추가 시간 없음)	256 MB	45378	14939	12041	33.270%
문제
지원이에게 2진 수열을 가르쳐 주기 위해, 지원이 아버지는 그에게 타일들을 선물해주셨다. 그리고 이 각각의 타일들은 0 또는 1이 쓰여 있는 낱장의 타일들이다.

어느 날 짓궂은 동주가 지원이의 공부를 방해하기 위해 0이 쓰여진 낱장의 타일들을 붙여서 한 쌍으로 이루어진 00 타일들을 만들었다. 결국 현재 1 하나만으로 이루어진 타일 또는 0타일을 두 개 붙인 한 쌍의 00타일들만이 남게 되었다.

그러므로 지원이는 타일로 더 이상 크기가 N인 모든 2진 수열을 만들 수 없게 되었다. 예를 들어, N=1일 때 1만 만들 수 있고, N=2일 때는 00, 11을 만들 수 있다. (01, 10은 만들 수 없게 되었다.) 또한 N=4일 때는 0011, 0000, 1001, 1100, 1111 등 총 5개의 2진 수열을 만들 수 있다.

우리의 목표는 N이 주어졌을 때 지원이가 만들 수 있는 모든 가짓수를 세는 것이다. 단 타일들은 무한히 많은 것으로 가정하자.

입력
첫 번째 줄에 자연수 N이 주어진다. (1 ≤ N ≤ 1,000,000)

출력
첫 번째 줄에 지원이가 만들 수 있는 길이가 N인 모든 2진 수열의 개수를 15746으로 나눈 나머지를 출력한다.

예제 입력 1 
4
예제 출력 1 
5
*/